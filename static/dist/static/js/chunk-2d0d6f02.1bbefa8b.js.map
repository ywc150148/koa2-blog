{"version":3,"sources":["webpack:///./src/views/about.vue?e410","webpack:///src/views/about.vue","webpack:///./src/views/about.vue?dc78","webpack:///./src/views/about.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","_v","attrs","onRead","staticRenderFns","name","components","data","files","type","headerImage","picValue","upImgUrl","methods","imgPreview","Orientation","console","log","file","window","FileReader","test","reader","readAsDataURL","onloadend","img","src","result","length","self","onload","compress","ratio","Math","sqrt","width","height","canvas","ctx","fillStyle","fillRect","count","tCanvas","nw","nh","tctx","drawImage","i","j","rotateImg","ndata","step","min_step","direction","max_step","rotate","degree","dataURLtoFile","arr","dataurl","split","n","u8arr","bstr","charCodeAt","File","component"],"mappings":"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","file":"static/js/chunk-2d0d6f02.1bbefa8b.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"about\"},[_c('h1',[_vm._v(\"This is an about page\")]),_c('van-uploader',{attrs:{\"after-read\":_vm.onRead,\"accept\":\"image/*\"}})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div class=\"about\">\n    <h1>This is an about page</h1>\n    <van-uploader :after-read=\"onRead\" accept=\"image/*\">\n      <!-- <img src=\"./icon_input_add.png\"> -->\n    </van-uploader>\n  </div>\n</template>\n\n<script>\nimport { Uploader } from \"vant\";\nimport Exif from \"exif-js\";\n\nexport default {\n  name: \"\",\n  components: {\n    [Uploader.name]: Uploader\n  },\n  data() {\n    return {\n      files: {\n        name: \"\",\n        type: \"\"\n      },\n      headerImage: null,\n      picValue: null,\n      upImgUrl: \"\"\n    };\n  },\n\n  methods: {\n    // 组件方法 获取 流\n    async onRead(file) {\n      console.log(file);\n      // console.log(file.file);\n      this.files.name = file.file.name; // 获取文件名\n      this.files.type = file.file.type; // 获取类型\n      this.picValue = file.file; // 文件流\n      this.imgPreview(this.picValue);\n    },\n    // 处理图片\n    imgPreview(file) {\n      let self = this;\n      let Orientation;\n      //去获取拍照时的信息，解决拍出来的照片旋转问题\n      Exif.getData(file, function() {\n        Orientation = Exif.getTag(this, \"Orientation\");\n        console.log(Exif.getAllTags(this)); // 此处打印的为选中图片的数据\n        // console.log(\" Orientation\", Orientation)\n      });\n      // 看支持不支持FileReader\n      if (!file || !window.FileReader) return;\n      if (/^image/.test(file.type)) {\n        // 创建一个reader\n        let reader = new FileReader();\n        // 将图片2将转成 base64 格式\n        reader.readAsDataURL(file);\n        // 读取成功后的回调\n        reader.onloadend = function() {\n          // console.log(this.result);\n          let result = this.result;\n          let img = new Image();\n          img.src = result;\n          //判断图片是否大于500K,是就直接上传，反之压缩图片\n          if (this.result.length <= 500 * 1024) {\n            self.headerImage = this.result;\n            // self.postImg();\n          } else {\n            img.onload = function() {\n              let data = self.compress(img, Orientation);\n              self.headerImage = data;\n              // self.postImg();\n\n              console.log(\"data\",data);\n            };\n          }\n        };\n      }\n    },\n    // 压缩图片\n    compress(img, Orientation) {\n      let canvas = document.createElement(\"canvas\");\n      let ctx = canvas.getContext(\"2d\");\n      //瓦片canvas\n      let tCanvas = document.createElement(\"canvas\");\n      let tctx = tCanvas.getContext(\"2d\");\n      // let initSize = img.src.length;\n      let width = img.width;\n      let height = img.height;\n      //如果图片大于四百万像素，计算压缩比并将大小压至400万以下\n      let ratio;\n      if ((ratio = (width * height) / 4000000) > 1) {\n        // console.log(\"大于400万像素\");\n        ratio = Math.sqrt(ratio);\n        width /= ratio;\n        height /= ratio;\n      } else {\n        ratio = 1;\n      }\n      canvas.width = width;\n      canvas.height = height;\n      //    铺底色\n      ctx.fillStyle = \"#fff\";\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\n      //如果图片像素大于100万则使用瓦片绘制\n      let count;\n      if ((count = (width * height) / 1000000) > 1) {\n        // console.log(\"超过100W像素\");\n        count = ~~(Math.sqrt(count) + 1); //计算要分成多少块瓦片\n        //      计算每块瓦片的宽和高\n        let nw = ~~(width / count);\n        let nh = ~~(height / count);\n        tCanvas.width = nw;\n        tCanvas.height = nh;\n        for (let i = 0; i < count; i++) {\n          for (let j = 0; j < count; j++) {\n            tctx.drawImage(\n              img,\n              i * nw * ratio,\n              j * nh * ratio,\n              nw * ratio,\n              nh * ratio,\n              0,\n              0,\n              nw,\n              nh\n            );\n            ctx.drawImage(tCanvas, i * nw, j * nh, nw, nh);\n          }\n        }\n      } else {\n        ctx.drawImage(img, 0, 0, width, height);\n      }\n      //修复ios上传图片的时候 被旋转的问题\n      if (Orientation != \"\" && Orientation != 1) {\n        switch (Orientation) {\n          case 6: //需要顺时针（向左）90度旋转\n            this.rotateImg(img, \"left\", canvas);\n            break;\n          case 8: //需要逆时针（向右）90度旋转\n            this.rotateImg(img, \"right\", canvas);\n            break;\n          case 3: //需要180度旋转\n            this.rotateImg(img, \"right\", canvas); //转两次\n            this.rotateImg(img, \"right\", canvas);\n            break;\n        }\n      }\n      //进行最小压缩\n      let ndata = canvas.toDataURL(\"image/jpeg\", 0.1);\n      tCanvas.width = tCanvas.height = canvas.width = canvas.height = 0;\n      return ndata;\n    },\n    // 旋转图片\n    rotateImg(img, direction, canvas) {\n      //最小与最大旋转方向，图片旋转4次后回到原方向\n      const min_step = 0;\n      const max_step = 3;\n      if (img == null) return;\n      //img的高度和宽度不能在img元素隐藏后获取，否则会出错\n      let height = img.height;\n      let width = img.width;\n      let step = 2;\n      if (step == null) {\n        step = min_step;\n      }\n      if (direction == \"right\") {\n        step++;\n        //旋转到原位置，即超过最大值\n        step > max_step && (step = min_step);\n      } else {\n        step--;\n        step < min_step && (step = max_step);\n      }\n      //旋转角度以弧度值为参数\n      let degree = (step * 90 * Math.PI) / 180;\n      let ctx = canvas.getContext(\"2d\");\n      switch (step) {\n        case 0:\n          canvas.width = width;\n          canvas.height = height;\n          ctx.drawImage(img, 0, 0);\n          break;\n        case 1:\n          canvas.width = height;\n          canvas.height = width;\n          ctx.rotate(degree);\n          ctx.drawImage(img, 0, -height);\n          break;\n        case 2:\n          canvas.width = width;\n          canvas.height = height;\n          ctx.rotate(degree);\n          ctx.drawImage(img, -width, -height);\n          break;\n        case 3:\n          canvas.width = height;\n          canvas.height = width;\n          ctx.rotate(degree);\n          ctx.drawImage(img, -width, 0);\n          break;\n      }\n    },\n    //将base64转换为文件\n    dataURLtoFile(dataurl) {\n      var arr = dataurl.split(\",\"),\n        bstr = atob(arr[1]),\n        n = bstr.length,\n        u8arr = new Uint8Array(n);\n      while (n--) {\n        u8arr[n] = bstr.charCodeAt(n);\n      }\n      return new File([u8arr], this.files.name, {\n        type: this.files.type\n      });\n    }\n    //这里写接口\n    // async postImg() {\n    //   let file = this.dataURLtoFile(this.headerImage);\n    //   let formData = new window.FormData();\n    //   formData.append(\"file\", file);\n    //   this.$toast(this, \"图片上传中···\");\n    //   try {\n    //     let res = await util.ajax.post(this.upImgUrl, formData, {\n    //       headers: {\n    //         \"Content-Type\": \"multipart/form-data\"\n    //       }\n    //     });\n    //   } catch (e) {\n    //     console.log(e);\n    //   }\n    // }\n  }\n};\n</script>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./about.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./about.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./about.vue?vue&type=template&id=640f953f&\"\nimport script from \"./about.vue?vue&type=script&lang=js&\"\nexport * from \"./about.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}